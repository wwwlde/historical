;------------------------------------------------;
; Программа для выполнения различных операций
;------------------------------------------------;
; Описание программы:
; 1. Пример работы с побитовыми операциями.
; 2. Вычисления с использованием 16-битных и 32-битных значений.
;------------------------------------------------;
; Автор: Денис Лемешко (Z26114)
; Группа: 261
;------------------------------------------------;

stk segment stack 'stack'
  dw 64 dup(?)          ; Выделяем пространство для стека
stk ends

dat segment 'data'      ; Сегмент данных
  ml equ 0880h          ; 0000 1000 1000 0000b (16 бит)
  mh equ 0009h          ; 0000 0000 0000 1001b (16 бит)
  p dd (?)              ; 32-битная переменная p
  x dd (?)              ; 32-битная переменная x
  r dw (?)              ; 16-битная переменная r
  r1 dd (?)             ; 32-битная переменная r1
dat ends

cd segment 'code'      ; Сегмент кода
  assume cs:cd, ds:dat, ss:stk

begin:
  mov ax, dat           ; Загружаем адрес сегмента данных в ax
  mov ds, ax            ; Устанавливаем сегмент данных в ds

  ; Загружаем значения из r1 в bx и cx
  mov bx, word ptr r1    ; Загружаем низкое слово из r1 в bx
  mov cx, word ptr r1+2  ; Загружаем высокое слово из r1 в cx

  ; Сравнение x с -3
  cmp dword ptr x, -3d   ; Сравниваем x с -3
  je m                   ; Если x == -3, переход к метке m

  ; Выполняем побитовые операции или
  or bx, ml              ; Выполняем побитовое ИЛИ между bx и ml
  or cx, mh              ; Выполняем побитовое ИЛИ между cx и mh
  jmp exit               ; Переход к завершению программы

m:
  ; Если x == -3, выполняем вычисления с переменной r
  mov bx, word ptr r     ; Загружаем значение из r в bx
  mov ax, 3d             ; Загружаем 3 в ax
  imul bx                ; Умножаем bx на 3, результат в dx:ax
  add ax, word ptr r1    ; Добавляем низкое слово r1 к ax
  add dx, word ptr r1+2  ; Добавляем высокое слово r1+2 к dx
  mov word ptr p, ax     ; Сохраняем результат в p
  mov word ptr p+2, dx   ; Сохраняем старший результат в p+2

exit:
  ; Завершение программы
  mov ah, 4Ch            ; Функция завершения программы
  int 21h                ; Прерывание для завершения

cd ends
end begin
